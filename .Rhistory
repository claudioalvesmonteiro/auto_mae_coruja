nasc = read.csv('dados/nascimento.csv', sep=';')
nasc = read.csv('dados/nascimento.csv', sep=';', encoding = 'UTF-8')
nasc = read.csv('dados/nascimento.csv', sep=';', encoding = 'UTF-16)
''
)
)))))))0'''
nasc = read.csv('dados/nascimento.csv', sep=';', encoding = 'UTF-16')
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
View(nasc)
obito = read.csv('dados/obitos_infatis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
View(obito)
library(reshape2)
nasc2 = melt(nasc, measure.vars=2:24, variable.name="year", value.name="numero_nascimentos")
View(nasc2)
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
#==============================#
# TRATAMENTO DE DADOS
#=============================#
# Pivotar tabela para colunas ano e valor
library(reshape2)
nasc = melt(nasc, measure.vars=2:24, variable.name="ano", value.name="numero_nascimentos")
obito = melt(nasc, measure.vars=2:24, variable.name="ano", value.name="numero_obitos")
View(obito)
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
View(nasc)
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
#==============================#
# TRATAMENTO DE DADOS
#=============================#
# Pivotar tabela para colunas ano e valor
library(reshape2)
nasc = melt(nasc, measure.vars=2:23, variable.name="ano", value.name="numero_nascimentos")
obito = melt(obito, measure.vars=2:23, variable.name="ano", value.name="numero_obitos")
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
View(nasc)
# Pivotar tabela para colunas ano e valor
library(reshape2)
nasc = melt(nasc, measure.vars=2:23, variable.name="ano", value.name="numero_nascimentos")
obito = melt(obito, measure.vars=2:23, variable.name="ano", value.name="numero_obitos")
View(nasc)
# transformar em numerico
nasc$numero_nascimentos = as.numeric(nasc$numero_nascimentos)
obito$numero_obitos = as.numeric(obito$numero_obitos)
View(nasc)
nasc$ano = str_replace(nasc$ano, 'X', '')
# substituit 'X' por ''
library(stringr)
nasc$ano = str_replace(nasc$ano, 'X', '')
obito$ano = str_replace(obito$ano, 'X', '')
View(nasc)
View(nasc)
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")
View(nasc)
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
# Pivotar tabela para colunas ano e valor
library(reshape2)
nasc = melt(nasc, measure.vars=2:23, variable.name="ano", value.name="numero_nascimentos")
obito = melt(obito, measure.vars=2:23, variable.name="ano", value.name="numero_obitos")
View(nasc)
# transformar em numerico
nasc$numero_nascimentos = as.numeric(nasc$numero_nascimentos)
obito$numero_obitos = as.numeric(obito$numero_obitos)
# substituit 'X' por ''
library(stringr)
nasc$ano = str_replace(nasc$ano, 'X', '')
obito$ano = str_replace(obito$ano, 'X', '')
View(nasc)
nasc$ano = as.numeric(str_replace(nasc$ano, 'X', ''))
obito$ano = as.numeric(str_replace(obito$ano, 'X', ''))
strsplit(obito$Município, " ")
codigo = strsplit(obito$Município, " ")[1]
View(codigo)
sapply(strsplit(obito$Município," "), `[`, 1)
#
gsub('[[:digit:]]+', '', obito$Município)
#
str_replace(gsub('[[:digit:]]+', '', obito$Município), ' ', '')
#
obito$Município = str_replace(gsub('[[:digit:]]+', '', obito$Município), ' ', '')
nasc$Município = str_replace(gsub('[[:digit:]]+', '', nasc$Município), ' ', '')
View(nasc)
#========================================================#
# AUTOMACAO DE MODELOS DE SERIES TEMPORAIS INTERROMPIDAS
# Avaliacao do programa federal Mae Coruja
#========================================================#
# Claudio Alves Monteiro e Dalson Britto Figueired
# Agosto, 2019
#========================================================#
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
#==============================#
# TRATAMENTO DE DADOS
#=============================#
# Pivotar tabela para colunas ano e valor
library(reshape2)
nasc = melt(nasc, measure.vars=2:23, variable.name="ano", value.name="numero_nascimentos")
obito = melt(obito, measure.vars=2:23, variable.name="ano", value.name="numero_obitos")
# transformar em numerico
nasc$numero_nascimentos = as.numeric(nasc$numero_nascimentos)
obito$numero_obitos = as.numeric(obito$numero_obitos)
# substituit 'X' por ''
library(stringr)
nasc$ano = as.numeric(str_replace(nasc$ano, 'X', ''))
obito$ano = as.numeric(str_replace(obito$ano, 'X', ''))
# split codigos dos nomes
obito$code_muni = sapply(strsplit(obito$Município," "), `[`, 1)
nasc$code_muni = sapply(strsplit(nasc$Município," "), `[`, 1)
#
obito$Município = str_replace(gsub('[[:digit:]]+', '', obito$Município), ' ', '')
nasc$Município = str_replace(gsub('[[:digit:]]+', '', nasc$Município), ' ', '')
View(nasc)
View(obito)
#  combinar dados
dataset = merge(obito, nasc, by=c('code_muni', 'ano'))
View(dataset)
datana = dataset[complete.cases(dataset),]
View(datana)
datana$taxa = (datana$numero_obitos / datana$numero_nascimentos)*1000
datana$taxa
View(datana)
#========================================================#
# AUTOMACAO DE MODELOS DE SERIES TEMPORAIS INTERROMPIDAS
# Avaliacao do programa federal Mae Coruja
#========================================================#
# Claudio Alves Monteiro e Dalson Britto Figueired
# Agosto, 2019
#========================================================#
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
#==============================#
# TRATAMENTO DE DADOS
#=============================#
# Pivotar tabela para colunas ano e valor
library(reshape2)
nasc = melt(nasc, measure.vars=2:23, variable.name="ano", value.name="numero_nascimentos")
obito = melt(obito, measure.vars=2:23, variable.name="ano", value.name="numero_obitos")
# transformar em numerico
nasc$numero_nascimentos = as.numeric(nasc$numero_nascimentos)
obito$numero_obitos = as.numeric(obito$numero_obitos)
# substituit 'X' por ''
library(stringr)
nasc$ano = as.numeric(str_replace(nasc$ano, 'X', ''))
obito$ano = as.numeric(str_replace(obito$ano, 'X', ''))
# split codigos dos nomes
obito$code_muni = sapply(strsplit(obito$Município," "), `[`, 1)
nasc$code_muni = sapply(strsplit(nasc$Município," "), `[`, 1)
# remover numeros
obito$Município = str_replace(gsub('[[:digit:]]+', '', obito$Município), ' ', '')
nasc$Município = str_replace(gsub('[[:digit:]]+', '', nasc$Município), ' ', '')
#  combinar dados
dataset = merge(obito, nasc, by=c('code_muni', 'ano'))
datana = dataset[complete.cases(dataset),]
#==========================#
# calculos
#=======================#
datana$taxa = (datana$numero_obitos / datana$numero_nascimentos)*1000
View(datana)
lista = levels(as.factor(datana$code_muni))
lista = levels(as.factor(datana$Município.x))
lista = levels(as.factor(datana$code_muni))
muni = datana[datana$code_muni == '110000',]
View(muni)
muni = datana[datana$code_muni == '110006',]
View(muni)
as.numeric(data[,4])
as.numeric(nasc[,4])
nasc$code_muni = as.numeric(nasc[,4])
#========================================================#
# AUTOMACAO DE MODELOS DE SERIES TEMPORAIS INTERROMPIDAS
# Avaliacao do programa do governo de PE Mae Coruja
#========================================================#
# Claudio Alves Monteiro e Dalson Britto Figueiredo
# Agosto, 2019
#========================================================#
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
#==============================#
# TRATAMENTO DE DADOS
#=============================#
# funcao para tratamento de dados
tratamento = function(data, name){
# carregar pacotes
library(reshape2)  library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
nasc = tratamento(nasc, 'numero_nascimentos')
tratamento = function(data, name){
# carregar pacotes
library(reshape2)  library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
tratamento = function(data, name){
# carregar pacotes
library(reshape2)  library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
tratamento <- function(data, name){
# carregar pacotes
library(reshape2)  library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# carregar pacotes
library(reshape2); library(stringr)
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
dim(data)
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
print(dim(data))
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
print(data)
print(dim(data))
# transformar em numerico
data[,4] = as.numeric(data[,4])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
print(data)
print(dim(data))
# transformar em numerico
data[,3] = as.numeric(data[,3])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
nasc = tratamento(nasc, 'numero_nascimentos')
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,3] = as.numeric(data[,3])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
nasc = tratamento(nasc, 'numero_nascimentos')
# importar dados
nasc = read.csv('dados/nascimento.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
obito = read.csv('dados/obitos_infantis.csv', sep=';', stringsAsFactors=FALSE, fileEncoding="latin1")[,-24]
#==============================#
# TRATAMENTO DE DADOS
#=============================#
# funcao para tratamento de dados
tratamento <- function(data, name){
# carregar pacotes
library(reshape2); library(stringr)
# Pivotar tabela para colunas ano e valor
data = melt(data, measure.vars=2:23, variable.name="ano", value.name=name)
# transformar em numerico
data[,3] = as.numeric(data[,3])
# substituit 'X' por ''
data$ano = as.numeric(str_replace(data$ano, 'X', ''))
# split codigos dos nomes
data$code_muni = sapply(strsplit(data$Município," "), `[`, 1)
# remover numeros
data$Município = str_replace(gsub('[[:digit:]]+', '', data$Município), ' ', '')
return(data)
}
# executar tratamento
obito = tratamento(obito, 'numero_obitos')
nasc = tratamento(nasc, 'numero_nascimentos')
View(nasc)
#  combinar dados
dataset = merge(obito, nasc, by=c('code_muni', 'ano'))
View(dataset)
dataset[dataset$Município.x == 'Recife',]
# capturar codigo do estado
dataset$estado_code = substr(dataset$code_muni, start = 1, stop = 2)
dataset$estado_code
# selecionar PE
pe = dataset[dataset$estado_code == '26',]
View(pe)
# selecionar PE
pe = dataset[dataset$estado_code == '26',]
# selecionar casos completos
pe = pe[complete.cases(pe),]
# calcular taxa por municipio
pe$taxa = (pe$numero_obitos / pe$numero_nascimentos)*1000
View(pe)
x = c(0, 0, 0, 1, 1, 1, 1)
x
x[4]
length(pe)
dim(pe)[1]
muni = pe[pe$Município.x == 'Recife',]
# selec muni
muni = datana[datana$code_muni == i,]
# length of vector
dime = dim(muni)[1]
dime
# find index of year
match(muni$ano == 2007)
# find index of year
match(2007, muni$ano)
# find index of year
yi = match(year, muni$ano)
# found year
year = 2007
function (x, table, nomatch = NA_integer_, incomparables = NULL)
# find index of year
yi = match(year, muni$ano)
# find index of year
yi = match(year, muni$ano)
# range nivel
tempo = seq(0, yi)
# range tempo
tempo = 1:dime
x
# range nivel
nivel = rep(0, each=yi)
# range nivel
nivel = c(rep(0, each=yi), rep(1, each=(dime-yi) ))
nivel
muni$ano
